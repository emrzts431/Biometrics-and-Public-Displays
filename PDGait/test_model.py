import pickle
from sklearn.preprocessing import StandardScaler
import numpy as np


model = None
with open('pdgait_model.pkl', 'rb') as f:
    model = pickle.load(f)

data = np.array([['1712926462.008578', 7, 30, 4, 0, 23, 23, 15, 15, 0, 4, 13, 15, 19, 15], 
        ['1712926462.475118', 11, 30, 4, 4, 26, 26, 23, 23, 5, 4, 21, 19, 11, 7], 
        ['1712926462.754881', 8, 30, 4, 0, 26, 26, 27, 27, 0, 4, 22, 22, 5, 5], 
        ['1712926462.896226', 8, 38, 0, 5, 26, 22, 27, 27, 8, 7, 23, 24, 8, 7], ['1712926462.941835', 4, 41, 0, 5, 23, 23, 26, 23, 4, 4, 26, 28, 8, 4], 
        ['1712926463.035622', 4, 38, 0, 4, 22, 22, 27, 27, 4, 7, 23, 26, 7, 9], ['1712926463.082651', 4, 41, 0, 5, 23, 23, 26, 23, 4, 11, 23, 27, 11, 11], 
        ['1712926463.128931', 8, 45, 4, 0, 23, 23, 22, 23, 8, 15, 26, 26, 8, 8], ['1712926463.176039', 4, 45, 4, 0, 23, 23, 23, 23, 4, 11, 26, 27, 8, 8], ['1712926463.222324', 8, 45, 0, 4, 23, 27, 23, 19, 8, 19, 24, 23, 11, 11], 
        ['1712926463.269376', 8, 49, 4, 5, 27, 26, 19, 16, 8, 19, 25, 26, 11, 12], ['1712926463.316155', 8, 49, 4, 4, 26, 26, 19, 15, 8, 19, 28, 23, 12, 12], ['1712926463.361742', 12, 49, 4, 4, 30, 30, 19, 19, 8, 19, 26, 23, 15, 15], 
        ['1712926463.409209', 8, 49, 4, 0, 30, 30, 23, 26, 8, 19, 26, 23, 15, 19], ['1712926463.456205', 8, 52, 4, 5, 30, 27, 23, 26, 11, 15, 26, 23, 16, 19], ['1712926463.50176', 11, 49, 4, 4, 31, 31, 22, 23, 12, 15, 26, 20, 23, 23], 
        ['1712926463.546788', 8, 52, 4, 4, 27, 31, 27, 23, 12, 15, 31, 23, 29, 23], ['1712926463.592313', 11, 49, 4, 4, 31, 31, 26, 26, 11, 8, 32, 24, 26, 19], ['1712926463.639619', 11, 49, 4, 4, 31, 31, 26, 26, 11, 15, 28, 25, 23, 19], 
        ['1712926463.686004', 11, 50, 4, 4, 31, 31, 26, 26, 15, 15, 28, 24, 29, 23], ['1712926463.733071', 11, 50, 8, 4, 30, 30, 30, 31, 12, 19, 29, 23, 26, 23], ['1712926463.780188', 15, 49, 4, 8, 34, 31, 26, 30, 12, 22, 29, 15, 26, 26], 
        ['1712926463.826153', 19, 41, 4, 8, 34, 35, 27, 26, 15, 19, 19, 17, 26, 19], ['1712926463.873159', 22, 39, 7, 8, 35, 42, 26, 23, 15, 19, 22, 16, 23, 22], ['1712926463.920079', 22, 39, 4, 8, 37, 41, 27, 23, 15, 19, 20, 19, 23, 19], 
        ['1712926463.966791', 22, 38, 7, 8, 38, 42, 23, 22, 11, 22, 22, 19, 19, 15], ['1712926464.012725', 22, 42, 11, 4, 38, 42, 19, 18, 12, 22, 28, 23, 26, 15], ['1712926464.059389', 22, 42, 15, 8, 38, 41, 22, 27, 8, 22, 30, 23, 21, 15], 
        ['1712926464.10645', 22, 46, 15, 8, 37, 38, 23, 30, 8, 22, 32, 27, 19, 11], ['1712926464.152563', 22, 49, 18, 8, 34, 38, 23, 27, 12, 22, 33, 27, 18, 11], ['1712926464.199552', 22, 53, 18, 8, 34, 34, 23, 31, 8, 22, 30, 26, 20, 15], 
        ['1712926464.24555', 26, 53, 18, 8, 34, 34, 27, 29, 11, 19, 35, 27, 18, 16], ['1712926464.292836', 26, 53, 18, 8, 34, 31, 27, 30, 11, 23, 35, 27, 14, 23], ['1712926464.339574', 26, 53, 18, 8, 34, 31, 27, 30, 11, 23, 35, 26, 14, 25], 
        ['1712926464.386381', 26, 53, 18, 8, 34, 32, 30, 31, 11, 23, 34, 27, 15, 24], ['1712926464.433221', 22, 57, 18, 8, 34, 38, 30, 26, 15, 23, 33, 30, 25, 29], ['1712926464.480144', 16, 57, 19, 4, 34, 38, 30, 30, 12, 26, 33, 30, 15, 27], 
        ['1712926464.527067', 15, 57, 19, 4, 34, 39, 30, 27, 12, 26, 35, 30, 28, 27], ['1712926464.573668', 16, 53, 15, 8, 37, 47, 31, 30, 12, 26, 32, 34, 26, 19], ['1712926464.620734', 16, 53, 15, 8, 34, 43, 30, 30, 12, 22, 34, 34, 29, 22],
          ['1712926464.667435', 12, 53, 11, 15, 39, 43, 37, 30, 12, 26, 33, 31, 27, 22], ['1712926464.713884', 12, 56, 8, 15, 41, 46, 38, 26, 15, 26, 32, 30, 23, 27], 
        ['1712926464.761027', 19, 53, 8, 15, 45, 41, 34, 27, 20, 26, 28, 30, 26, 31], ['1712926464.807129', 19, 57, 8, 15, 46, 42, 34, 26, 19, 26, 25, 30, 27, 31], ['1712926464.853632', 23, 57, 8, 15, 42, 41, 31, 23, 26, 26, 28, 26, 27, 27], 
        ['1712926464.900105', 23, 57, 8, 15, 42, 41, 33, 30, 24, 26, 29, 23, 23, 30], ['1712926464.946532', 27, 60, 8, 15, 38, 34, 31, 34, 23, 26, 25, 23, 19, 27], ['1712926464.993172', 29, 61, 8, 11, 42, 42, 34, 31, 23, 27, 30, 26, 19, 30], 
        ['1712926465.039795', 28, 60, 8, 15, 46, 45, 42, 31, 22, 27, 32, 30, 19, 30], ['1712926465.086923', 27, 64, 8, 15, 46, 49, 42, 34, 23, 26, 31, 30, 22, 27], ['1712926465.134949', 30, 61, 8, 15, 54, 49, 34, 34, 23, 26, 31, 30, 23, 23],
          ['1712926465.181958', 30, 61, 8, 19, 51, 49, 34, 32, 27, 26, 31, 30, 26, 23], ['1712926465.229242', 26, 68, 8, 19, 51, 42, 35, 33, 28, 27, 35, 34, 27, 22], ['1712926465.275063', 23, 64, 8, 15, 46, 41, 35, 35, 29, 26, 35, 34, 31, 30], 
          ['1712926465.32191', 23, 72, 8, 20, 42, 38, 33, 34, 28, 27, 32, 33, 31, 31], ['1712926465.368453', 27, 68, 8, 19, 38, 31, 32, 34, 28, 26, 34, 30, 26, 31], ['1712926465.415476', 27, 68, 8, 15, 35, 31, 27, 34, 29, 26, 36, 30, 26, 31],
            ['1712926465.462601', 30, 64, 8, 23, 34, 42, 27, 30, 28, 26, 27, 34, 24, 30], ['1712926465.509308', 30, 64, 5, 23, 38, 42, 30, 30, 30, 26, 28, 31, 23, 30], ['1712926465.555735', 30, 64, 8, 22, 53, 53, 38, 31, 26, 30, 34, 34, 28, 34],
              ['1712926465.602396', 30, 68, 8, 22, 57, 49, 38, 33, 26, 30, 32, 38, 30, 31], ['1712926465.649612', 31, 72, 13, 19, 49, 41, 53, 12, 27, 30, 38, 42, 26, 30], ['1712926465.696662', 27, 83, 12, 18, 42, 38, 56, 12, 30, 30, 39, 46, 26, 33], 
              ['1712926466.055403', 34, 87, 22, 19, 38, 45, 30, 20, 34, 34, 40, 46, 38, 34], ['1712926466.102299', 31, 87, 26, 19, 50, 53, 27, 41, 33, 34, 41, 45, 42, 35], ['1712926466.148859', 34, 87, 23, 26, 61, 56, 23, 38, 34, 34, 49, 47, 42, 30],
                ['1712926466.195802', 42, 91, 23, 22, 51, 48, 23, 52, 32, 34, 52, 41, 37, 32], ['1712926466.230012', 31, 87, 22, 19, 49, 56, 57, 46, 31, 34, 45, 37, 37, 32], ['1712926466.273398', 34, 91, 22, 19, 60, 63, 45, 68, 34, 34, 43, 49, 53, 37]])

print(len(data))
scaler = StandardScaler()
scaled_data = scaler.fit_transform(data)

prediction = model.predict(scaled_data)
print(len(prediction))
print(prediction)